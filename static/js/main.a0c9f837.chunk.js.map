{"version":3,"sources":["App.js","index.js"],"names":["App","className","GlobalStyle","Form","onSubmit","handleSubmit","htmlFor","Input","id","name","type","Button","createGlobalStyle","styled","form","input","button","ul","e","myForm","FormData","target","value","preventDefault","yyyy","Date","getFullYear","console","log","re_digit","re_filetype","match","alert","vorname","dateipfad","geburtsdatum","split","validation","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA6FeA,MAxDf,WACE,OACE,sBAAKC,UAAU,MAAf,UACG,cAACC,EAAD,IACA,sBAAKD,UAAU,eAAf,UAED,eAACE,EAAD,CAAMF,UAAU,aAAaG,SAAUC,EAAvC,UAEE,uBAAOC,QAAQ,OAAf,kBACA,cAACC,EAAD,CACEC,GAAG,OACHC,KAAK,OACLC,KAAK,SAIP,uBAAOF,GAAG,aAAV,qBAGA,cAACD,EAAD,CACEC,GAAG,UACHC,KAAK,UACLC,KAAK,SAIP,uBAAOF,GAAG,YAAV,0BAIA,cAACD,EAAD,CACEC,GAAG,SACHC,KAAK,SACLC,KAAK,SAGP,uBAAOF,GAAG,WAAV,0BAIA,cAACD,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,SAKP,cAACC,EAAD,CAAQD,KAAK,SAAb,uBAEF,mBAAGF,GAAG,UAAN,8BAYAN,EAAcU,YAAH,oeAoCXT,EAAOU,IAAOC,KAAV,glBAkCJP,EAAQM,IAAOE,MAAV,iGAMLJ,EAASE,IAAOG,OAAV,8LAYCH,IAAOI,GAAV,+JAgBV,SAASZ,EAAaa,GACpB,IAAIC,EAAS,IAAIC,EAASF,EAAEG,OAAO,GAAGC,MAAOJ,EAAEG,OAAO,GAAGC,MAAQJ,EAAEG,OAAO,GAAGC,MAAOJ,EAAEG,OAAO,GAAGC,OAIhGJ,EAAEK,iBAkCJ,SAAoBJ,GAElB,IACIK,GADQ,IAAIC,MACCC,cACjBC,QAAQC,IAAI,QAASJ,GAGrB,IAAMK,EAAW,MACXC,EAAc,aAEpBH,QAAQC,IAAIT,EAAOV,KAAKsB,MAAMF,IAC1BV,EAAOV,KAAKsB,MAAMF,IAClBG,MAAM,yBAGNb,EAAOc,QAAQF,MAAMF,IACvBG,MAAM,4BAGHb,EAAOe,UAAUH,MAAMD,IAC1BE,MAAM,+CAGGb,EAAOgB,aAAaC,MAAM,KAG5B,GAAKZ,GACZQ,MAAM,uCA1DRK,CAAWlB,GAEXa,MAAOb,EAAOV,KAAM,KAASU,EAAOc,QAAS,KAAQd,EAAOgB,aAAe,KAAQhB,EAAOe,W,IAQtFd,EACJ,WAAYX,EAAMwB,EAAUE,EAAeD,GAAY,oBACrDI,KAAK7B,KAAOA,EACZ6B,KAAKL,QAAUA,EACfK,KAAKH,aAAeA,EACpBG,KAAKJ,UAAYA,GC5NrBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0c9f837.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\nimport './App.css';\n/* \n\nAls Aufgabe ist für Sie folgendes geplant. \n - Erstellen Sie ein grafisch ansprechendes und responsives Webformular (in React) mit Personendaten (Name, Vorname, Geburtsdatum,…). Es soll außerdem die Möglichkeit bestehen, ein Bild hochzuladen.\n\n \n\nAuf dem Webformular soll ein Button „senden“ enthalten sein. Sobald dieser „geklickt“ wird, sollen die Daten validiert (z.B. Geburtsdatum darf nicht in der Zukunft liegen, Namen dürfen keine Zahlen enthalten,…) und ggf ein Hinweis (zum Beispiel als roter PopOver) mit der entsprechenden Fehlermeldung erscheinen. Anschließend sollen die Daten inkl. Bild in einer Klasse gespeichert und in einem Dialog als Labels und Bild angezeigt werden.\n\n\n/////////////////////////////////////\n1  Globaler Style (CSS)\n///////////////////////////////////// \n  > anstelle von import './App.css';\n  > Styled Component für CSS IN CSS\n\n/////////////////////\n2  ONCLICK HANDLER\n/////////////////////\n  > onSubmit Daten Entgegenehmen\n  > <Form className=\"signupform\" onSubmit={handleSubmit}>\n\n/////////////////////\n3  VALIDATION\n/////////////////////\n> validierung mit regex\n\n\n\n*/\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <GlobalStyle></GlobalStyle>\n       <div className=\"form-wrapper\">\n   \n      <Form className=\"signupform\" onSubmit={handleSubmit}>\n\n        <label htmlFor=\"name\">NAME</label>\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"name\"\n           \n        />\n\n        <label id=\"pass-label\" >\n          VORNAME\n        </label>\n        <Input\n          id=\"vorname\"\n          name=\"vorname\"\n          type=\"text\"\n          \n        />\n\n        <label id=\"conf-pass\">\n          GEBURTSDATUM\n        </label>\n\n        <Input\n          id=\"geburt\"\n          name=\"geburt\"\n          type=\"date\"\n        />\n\n        <label id=\"add-file\">\n          DATEI ANHANG\n        </label>\n\n        <Input\n          id=\"datei\"\n          name=\"datei\"\n          type=\"file\"\n        />\n\n        \n\n        <Button type=\"submit\">Senden</Button>\n      </Form>\n      <p id=\"mention\">MEKA FORM</p>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/////////////////////////////////////\n//  Globaler Style + Media Queries (CSS)\n///////////////////////////////////// \n\nconst GlobalStyle = createGlobalStyle`\n\n\n.signupform{\n  padding-top:4rem;\n}\n\n.App{\n\n\nheight:100vh;\ndisplay:grid;\njustify-content: center;\nalign-content: center;\nfont-family: 'Play';\nbackground: rgb(17,9,37);\nbackground: radial-gradient(circle, rgba(17,9,37,1) 28%, rgba(42,8,16,1) 100%);\nborder-bottom: 4rem solid black;\nborder-top: 4rem solid black;\n\n}\ninput { border: none; }\n\n\n  \n  #mention {\n    color: #00ffff;\n    text-align: center;\n    margin-top: 1rem;\n  }\n`;\n\n/////////////////////////////////////\n//  STYLED COMPONENTS\n///////////////////////////////////// \n\nconst Form = styled.form`\n  color: white;\n  background-color: rgba(43, 11, 95, 68%);\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  max-width: 400px;\n  height: 70vh;\n  max-height: 453px;\n  justify-self: center;\n  align-self: center;\n  padding: 0 4rem;\n\n  outline: 1px solid rgba(112, 112, 112, 100%);\n  outline-offset: -7px;\n\n  .formlist > *:not(:last-child) {\n\n    margin-bottom: 0.5rem;\n  }\n\n  label {\n    font-size: 1.5rem;\n    margin-bottom: 0.4rem;\n  }\n  #pass-label {\n    margin-top: 2.5rem;\n  }\n\n  #conf-pass {\n    margin-top: 0.5rem;\n  }\n`;\n\nconst Input = styled.input`\n  background-color: #01a8ae;\n  padding: 0.5rem 0;\n  color: black;\n`;\n\nconst Button = styled.button`\n  flex-grow: 0;\n\n  background-color: #00f6ff;\n  border: none;\n  margin-top: 3rem;\n  padding: 1rem 0;\n  width: 50%;\n  margin: 0 auto;\n  margin-top: 4rem;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  color: #00ffff;\n  font-family: \"Play\";\n  margin-top: 4rem;\n  margin-left: 3rem;\n  margin-bottom: 4rem;\n`;\n\n\n/////////////////////\n//  ONSUBMIT HANDLER\n/////////////////////\n// https://stackoverflow.com/a/47678799/11678858 ( without state )\n// https://stackoverflow.com/a/23428536/11678858 ( with state)\n\nfunction handleSubmit(e) {\n  let myForm = new FormData(e.target[0].value, e.target[1].value , e.target[2].value, e.target[3].value);\n\n\n\n  e.preventDefault();\n\n \n  validation(myForm);\n\n  alert( myForm.name +\"\\n\" +   myForm.vorname +\"\\n\" +  myForm.geburtsdatum + \"\\n\" +  myForm.dateipfad );\n};\n\n/////////////////////\n//  KLASSE\n/////////////////////\n// https://www.w3schools.com/js/js_classes.asp\n\nclass FormData {\n  constructor(name, vorname , geburtsdatum , dateipfad) {\n    this.name = name;\n    this.vorname = vorname;\n    this.geburtsdatum = geburtsdatum;\n    this.dateipfad = dateipfad;\n  }\n}\n\n\n\n/////////////////////\n//  VALIDATION\n/////////////////////\n// 1. Keine Zahl im Namen - regex search digit\n// 2. Kein Datum in der Zukunft - geburtsdatum > \n// 3. DateiTyp PNG / JPG\n\n\n\n// myForm = // name, vorname , geburtsdatum , dateipfad\nfunction validation(myForm) {\n  // DATUM HEUTE für vergleich mit Form Jahr (simplified for demo)\n  var today = new Date();\n  var yyyy = today.getFullYear();\n  console.log('yyyy:', yyyy)\n  \n\n  const re_digit = /\\d/g;  // search digit\n  const re_filetype = /.png|.jpg/g;  // search .png or jpg\n\n  console.log(myForm.name.match(re_digit))\n  if (myForm.name.match(re_digit)) {\n      alert(\"ERROR - ZAHL IM NAMEN\" );\n  }\n\n  if (myForm.vorname.match(re_digit)) {\n    alert(\"ERROR - ZAHL IM VORNAMEN\" );\n}\n\n  if (!myForm.dateipfad.match(re_filetype)) {\n    alert(\"ERROR - Dateityp .jpg oder .png benötigt\" );\n  }\n\n  let jahr = myForm.geburtsdatum.split(\"-\");\n  //console.log('jahr:', jahr[0])\n\n  if (jahr[0] > yyyy ) {\n    alert(\"ERROR - GEBURTSDATUM in der Zukunft\" );\n  }\n\n\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}